# This is a basic workflow to help you get started with Actions

name: Test

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "tpot-test" ]
  pull_request:
      branches: [ "tpot-test" ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # This workflow contains a single job called "build"
  run-tests:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version:
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12-dev"
          - "pypy-3.7"
          - "pypy-3.8"
          - "pypy-3.9"
    name: Test
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Update pip
        run: pip install --upgrade pip

      - name: Install dependencies
        run: pip install pytest
        # run: python -m pip install pytest .

      - name: Run Test
        run: pytest


  # # This workflow contains a single job called "build"
  # build:
  #   # The type of runner that the job will run on
  #   runs-on: [ubuntu-latest, macos-latest, windows-latest]

  #   # Steps represent a sequence of tasks that will be executed as part of the job
  #   steps:
  #     # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
  #     - uses: actions/checkout@v4

  #     # Runs a single command using the runners shell
  #     - name: Run a one-line script
  #       run: echo Hello, world!

  #     # Runs a set of commands using the runners shell
  #     - name: Run a multi-line script
  #       run: |
  #         echo Add other actions to build,
  #         echo test, and deploy your project.
